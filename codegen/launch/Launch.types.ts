/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint128 = string;
export interface Config {
  apollo_router: Addr;
  atom_denom: string;
  atomosmo_pool_id: number;
  credit_denom: string;
  discount_vault_id: number;
  governance_id: number;
  liq_queue_id: number;
  liquidity_check_id: number;
  margin_proxy_id: number;
  mbrn_auction_id: number;
  mbrn_denom: string;
  mbrn_launch_amount: Uint128;
  oracle_id: number;
  osmo_denom: string;
  osmosis_proxy_id: number;
  osmousdc_pool_id: number;
  positions_id: number;
  pre_launch_contributors: Addr;
  stability_pool_id: number;
  staking_id: number;
  system_discounts_id: number;
  usdc_denom: string;
  vesting_id: number;
}
export type ExecuteMsg = {
  lock: {
    lock_up_duration: number;
  };
} | {
  change_lock_duration: {
    new_lock_up_duration: number;
    old_lock_up_duration: number;
    uosmo_amount?: Uint128 | null;
  };
} | {
  withdraw: {
    lock_up_duration: number;
    withdrawal_amount: Uint128;
  };
} | {
  claim: {};
} | {
  launch: {};
} | {
  update_config: UpdateConfig;
};
export interface UpdateConfig {
  credit_denom?: string | null;
  mbrn_denom?: string | null;
  osmo_denom?: string | null;
  usdc_denom?: string | null;
}
export interface InstantiateMsg {
  apollo_router: string;
  discount_vault_id: number;
  governance_id: number;
  liq_queue_id: number;
  liquidity_check_id: number;
  margin_proxy_id: number;
  mbrn_auction_id: number;
  oracle_id: number;
  osmosis_proxy_id: number;
  positions_id: number;
  pre_launch_contributors: string;
  stability_pool_id: number;
  staking_id: number;
  system_discounts_id: number;
  vesting_id: number;
}
export interface LaunchAddrs {
  discount_vault: Addr;
  governance: Addr;
  liq_queue: Addr;
  liquidity_check: Addr;
  mbrn_auction: Addr;
  oracle: Addr;
  osmosis_proxy: Addr;
  positions: Addr;
  stability_pool: Addr;
  staking: Addr;
  system_discounts: Addr;
  vesting: Addr;
  [k: string]: unknown;
}
export type AssetInfo = {
  token: {
    address: Addr;
  };
} | {
  native_token: {
    denom: string;
  };
};
export interface Lockdrop {
  deposit_end: number;
  launched: boolean;
  lock_up_ceiling: number;
  locked_asset: AssetInfo;
  num_of_incentives: Uint128;
  start_time: number;
  withdrawal_end: number;
}
export interface LockedUser {
  deposits: Lock[];
  incentives_withdrawn: Uint128;
  total_tickets: Uint128;
  user: Addr;
}
export interface Lock {
  deposit: Uint128;
  lock_up_duration: number;
}
export type QueryMsg = {
  config: {};
} | {
  lockdrop: {};
} | {
  contract_addresses: {};
} | {
  incentive_distribution: {};
} | {
  user_incentives: {
    user: string;
  };
} | {
  user_info: {
    user: string;
  };
};
export type Decimal = string;
export interface UserRatio {
  ratio: Decimal;
  user: Addr;
}