/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export type AssetInfo = {
  token: {
    address: Addr;
  };
} | {
  native_token: {
    denom: string;
  };
};
export type Addr = string;
export type Decimal = string;
export interface AssetPool {
  credit_asset: Asset;
  deposits: Deposit[];
  liq_premium: Decimal;
}
export interface Asset {
  amount: Uint128;
  info: AssetInfo;
}
export interface Deposit {
  amount: Decimal;
  deposit_time: number;
  last_accrued: number;
  unstake_time?: number | null;
  user: Addr;
}
export interface ClaimsResponse {
  claims: Coin[];
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Config {
  incentive_rate: Decimal;
  max_incentives: Uint128;
  mbrn_denom: string;
  minimum_deposit_amount: Uint128;
  osmosis_proxy: Addr;
  owner: Addr;
  positions_contract: Addr;
  unstaking_period: number;
}
export interface DepositPositionResponse {
  capital_ahead: Decimal;
  deposit: Deposit;
}
export type ExecuteMsg = {
  update_config: UpdateConfig;
} | {
  deposit: {
    user?: string | null;
  };
} | {
  withdraw: {
    amount: Uint128;
  };
} | {
  restake: {
    restake_amount: Decimal;
  };
} | {
  claim_rewards: {};
} | {
  liquidate: {
    liq_amount: Decimal;
  };
} | {
  distribute: {
    distribute_for: Uint128;
    distribution_asset_ratios: Decimal[];
    distribution_assets: Asset[];
  };
} | {
  repay: {
    repayment: Asset;
    user_info: UserInfo;
  };
};
export interface UpdateConfig {
  incentive_rate?: Decimal | null;
  max_incentives?: Uint128 | null;
  mbrn_denom?: string | null;
  minimum_deposit_amount?: Uint128 | null;
  osmosis_proxy?: string | null;
  owner?: string | null;
  positions_contract?: string | null;
  unstaking_period?: number | null;
}
export interface UserInfo {
  position_id: Uint128;
  position_owner: string;
}
export interface InstantiateMsg {
  asset_pool: AssetPool;
  incentive_rate?: Decimal | null;
  max_incentives?: Uint128 | null;
  mbrn_denom: string;
  minimum_deposit_amount: Uint128;
  osmosis_proxy: string;
  owner?: string | null;
  positions_contract: string;
}
export interface LiquidatibleResponse {
  leftover: Decimal;
}
export type QueryMsg = {
  config: {};
} | {
  unclaimed_incentives: {
    user: string;
  };
} | {
  capital_ahead_of_deposit: {
    user: string;
  };
} | {
  check_liquidatible: {
    amount: Decimal;
  };
} | {
  user_claims: {
    user: string;
  };
} | {
  asset_pool: {
    deposit_limit?: number | null;
    start_after?: number | null;
    user?: string | null;
  };
};