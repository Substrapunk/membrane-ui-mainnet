{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Returns the contract's config",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns Positions owned by a user",
      "type": "object",
      "required": [
        "get_user_positions"
      ],
      "properties": {
        "get_user_positions": {
          "type": "object",
          "required": [
            "user"
          ],
          "properties": {
            "limit": {
              "description": "Response limiter",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "user": {
              "description": "User to query",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns a single Position",
      "type": "object",
      "required": [
        "get_position"
      ],
      "properties": {
        "get_position": {
          "type": "object",
          "required": [
            "position_id",
            "position_owner"
          ],
          "properties": {
            "position_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_owner": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get Basket redeemability",
      "type": "object",
      "required": [
        "get_basket_redeemability"
      ],
      "properties": {
        "get_basket_redeemability": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "Response limiter",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "position_owner": {
              "description": "Position owner to query.",
              "type": [
                "string",
                "null"
              ]
            },
            "start_after": {
              "description": "Premium to start after",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint128",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns Positions in the contract's Basket",
      "type": "object",
      "required": [
        "get_basket_positions"
      ],
      "properties": {
        "get_basket_positions": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "Response limiter",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "description": "Start after this user address",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns the contract's Basket",
      "type": "object",
      "required": [
        "get_basket"
      ],
      "properties": {
        "get_basket": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns Basket collateral debt caps",
      "type": "object",
      "required": [
        "get_basket_debt_caps"
      ],
      "properties": {
        "get_basket_debt_caps": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns Positions with bad debt in the Basket",
      "type": "object",
      "required": [
        "get_basket_bad_debt"
      ],
      "properties": {
        "get_basket_bad_debt": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns insolvency status of a Position",
      "type": "object",
      "required": [
        "get_position_insolvency"
      ],
      "properties": {
        "get_position_insolvency": {
          "type": "object",
          "required": [
            "position_id",
            "position_owner"
          ],
          "properties": {
            "position_id": {
              "description": "Position ID to query",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "position_owner": {
              "description": "Position owner to query",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns credit redemption rate",
      "type": "object",
      "required": [
        "get_credit_rate"
      ],
      "properties": {
        "get_credit_rate": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns Basket collateral interest rates",
      "type": "object",
      "required": [
        "get_collateral_interest"
      ],
      "properties": {
        "get_collateral_interest": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Used internally to test state propagation",
      "type": "object",
      "required": [
        "propagation"
      ],
      "properties": {
        "propagation": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
